'''3. Реализовать программу работы с органическими клетками. Необходимо создать класс Клетка.
В его конструкторе инициализировать параметр, соответствующий количеству клеток (целое число).
В классе должны быть реализованы методы перегрузки арифметических операторов:
сложение (add()),
вычитание (sub()),
умножение (mul()),
деление (truediv())

В классе необходимо реализовать метод make_order(), принимающий экземпляр класса и количество ячеек в ряду.
Данный метод позволяет организовать ячейки по рядам.

Метод должен возвращать строку вида **\n\n***..., где количество ячеек между \n равно переданному аргументу.
Если ячеек на формирование ряда не хватает, то в последний ряд записываются все оставшиеся.

Например, количество ячеек клетки равняется 12, количество ячеек в ряду — 5.
Тогда метод make_order() вернет строку: **\n\n.

Или, количество ячеек клетки равняется 15, количество ячеек в ряду — 5.
Тогда метод make_order() вернет строку: **\n\n***.'''

class Cell:
	def __init__(self, param):
		self.param = param

	def make_order(self, rows):
		return '\n'.join(['*' * rows for i in range(self.param // rows)]) + '\n' + '*' * (self.param % rows)

	def __str__(self):
		return self.param

	def __add__(self, other):
		return 'Сумма клеток равна ' + str(self.param + other.param)

	def __sub__(self, other):
		return 'Разница клеток равна ' + str(self.param - other.param) if self.param - other.param > 0 \
			else  'Ячеек в первой клетке больше или меньше, чем во второй, вычитание не возможно'

	def __mul__(self, other):
		return 'Произведение клеток равно ' + str(self.param * other.param)

	def __truediv__(self, other):
		return 'Частное клеток, округленное, равно ' + str((round(self.param / other.param)))

cell_1 = Cell(10)
cell_2 = Cell(7)
print(cell_1.make_order(4))
# print(cell_1 + cell_2)
# print(cell_1 * cell_2)
# print(cell_1 - cell_2)
# print(cell_1 / cell_2)